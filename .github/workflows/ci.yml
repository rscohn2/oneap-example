# SPDX-FileCopyrightText: 2019-2020 Intel Corporation
#
# SPDX-License-Identifier: MIT

on:
  push:
    branches:
      - main
  pull_request:

env:
  SPACK_REPO: prstrnn/spack
  SPACK_BRANCH: intel-oneapi-2024.5.0

jobs:
  checks:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    - name: Install prerequisites
      run: |
          python -m pip install --quiet --upgrade pip
          pip install --quiet -r requirements.txt
    - name: Checks
      run: |
        pre-commit run --all

  gcc:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        part: [gcc_1, gcc_2, virtual, ilp64]
    name: ${{ matrix.part }}
    steps:
    - name: CPUtype
      run: lscpu
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    - name: Install prerequisites
      run: |
          python -m pip install --quiet --upgrade pip
          pip install --quiet -r requirements.txt
    - name: Install spack
      uses: actions/checkout@v4
      with:
        repository: ${{ env.SPACK_REPO }}
        path: spack
        ref: ${{ env.SPACK_BRANCH }}
    - name: Package tests
      run: |
        source spack/share/spack/setup-env.sh
        spack repo add ./repo
        pytest -s tests/test_packages.py::test_${{ matrix.part }}
    - name: Load test
      run: |
        source spack/share/spack/setup-env.sh
        pytest -s tests/test_packages.py::test_load
    - uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: gcc-${{ matrix.part }}-logs
        path: |
          /tmp/runner/spack-stage/
          /tmp/runner/intel-oneapi-installer/
          !/tmp/runner/**/*.sh
          bootstrapper*
          installer*
        retention-days: 7

  intel-compiler:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        compiler: [icx]
        part: [1, 2, 3]
    name: ${{ matrix.compiler }}_${{ matrix.part }}
    steps:
    - name: CPUtype
      run: lscpu
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    - name: Install prerequisites
      run: |
          python -m pip install --quiet --upgrade pip
          pip install --quiet -r requirements.txt
    - name: Install spack
      uses: actions/checkout@v4
      with:
        repository: ${{ env.SPACK_REPO }}
        path: spack
        ref: ${{ env.SPACK_BRANCH }}
    - name: Package tests
      run: |
        source spack/share/spack/setup-env.sh
        spack repo add ./repo
        spack install intel-oneapi-compilers
        spack clean --downloads
        spack compiler add `spack location -i intel-oneapi-compilers`/compiler/latest/bin
        pytest -s tests/test_packages.py::test_${{ matrix.compiler }}_${{ matrix.part }}
    - uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: ${{ matrix.compiler }}-${{ matrix.part }}-logs
        path: |
          /tmp/runner/spack-stage/
          /tmp/runner/intel-oneapi-installer/
          !/tmp/runner/**/*.sh
          bootstrapper*
          installer*
        retention-days: 7
